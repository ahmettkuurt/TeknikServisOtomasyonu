<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAALdEVYdFRpdGxlAFNlbmQ7faSt1wAABfBJREFUWEftl+lPVGcUxq+1VHG3/Q+aptPNtKlR00ai
        NcaNqFiT9oPRToxGkG1UNoFhk30AcQHZdBQEBxAQUKQC4gKCpS5NoyW4oCig7MMOok/Pee+dARUbbBP6
        ob3Jj+ecd4b3Oefwzp2LBOBfZdTF8WTUxfFk1MXxZDh4/ZowDoxagOnFiQrvvgUWY4Tf+w4xQdIllqp0
        CRfU4fGl+rD40mp+Ic5Qae2lr+xKy7uJtNzfkJp7E8eJlJwbSM5mruNY1nUcPclcw5HMazicWYXDGVVI
        Sq9CouEXJBiuIj7tKuJSK3GIiD1egdiUCsSkXEFY0sXfQ2MLlpLXRIlMpfC4UimMEBXRokdC2aAmrgwv
        aDQC+vF2vMBzgnU06h48wXHvCCN5WZDxeVXooRJ1yKESfUhsCU/AwiHmMjz1legfGEJ//xD6SPtYid7+
        ZwTrCPpojRHxEHooZgafPUdDpC/qdVrUh3nhcYgnBgafo8bTCTfWf8d/90lSSGyxFBwjQxdPwMLpwEU0
        tvYqBs8UYzlmA1nJRDEUMdOroMRs9ih4Nx4FuqPO3xUPfVxobQi/2izGlR+suYDJUvDBYlXQwSJ10IEi
        feCBczyB93RJlzDURwUo3ZgNTN0pJt2KISvTJXRQyQdFAQ+1O1HrpUGthzPuuzmKtesbVyM63MAFWEpk
        KgXu/1kKIOjikzlpX3wxHoR4oJsMu9lImNHGiqkpZ0Nh2iNrVw+vEZxTzN3ec3HAvZ12uKvZhjtOW9FP
        a521tQjcf44LmCIF7CtUBUQXqv2iC/V+0Wd5ApPKHGxx+6fVsqnoxmTAqpgQnZR3sinBasLYTUqwWY3D
        FtTYbUb1NjX+2LpJnKvOngHYB+bJBZCx5Bd1VvKNKqBcTGDyrY3WqLbfYO5m5OavQUZGsw6QOTOIDlJx
        iPkAv4Im6hyWOaZxAVMln8gCFaHWRhbovSPO8AQsqzatR+/jOrMBK5vwxsOYzAaEmZmul2lnOhXt6hfx
        UrtUrJALmCZpI05L3joi/DTlYgKWUSEnxMhNZvuSK4kKRB+rUPSKiPeS7j0qE6XQ3skmshFrm5kBtCpq
        45IB54AcuQCv8HyVZ1i+mtDvDs3jCUzxiSyEV2K5uYv65m40EPVNBKsJzonHgi6BMDIqhqwKHDMtRM3D
        NrgF5XIB0yUylTxCcgV08b1/6gbffKzzyjOPTHSp507LEUUaSUTpy4VGHilHBHNYVmFEnbJRi7EPLR0E
        xx0M5/3obO+Ebos3FzBDcg/OVbkFn1K7BeboXQNzeAJT17jnYtOes6ILHp/o8GkXHr2BOuaJjGxsMutD
        Mxk2m2OivR+XNv6I/DkfcQEzJdegHMl1D5NNuZjAtLXup3C/wWgem7nLI2XUaRl03K1QhaQyhBO6xDIy
        kI2aTIYc05pMr+DU5x8iY+6XcgEue7JVuwKy1bv8s/Q7/bN4AtOd/E+h10jd0C/zyDqUwyifdEX5fIw4
        9e1KPGw2bPqU9GmbAuX5C+fBXRPDBcySyFTa4X9S2uF3knIxgRluPgbcdNwyPDalC7MqjDQSJiazkTGZ
        PhHmvaQyDbeqYe+VzgXMljR+mSqNb6Za45Opd/LJ4AnMyFmzFpcXfa1sLo/NFPNGTYSpG85Hbi6gL7KX
        4tYeoY2U85dcI32CvrfTywU4+2RITlomnXL5DFxc+BUur1qC1pq7YgrbdcVYZHcCNnQ2qh+0wdhqRBXd
        Vs9/M4fetxhN1XeoqB7YhhbBalsa1rhk49b9FrQ3t6Ny8wYUz/sMF5ZbofF2NRpbemDjkIxPrCO4gBmS
        ozZd5eiVrnb0NugdPA08gUmpq1YnB3gktLrQZ9XaOR1WtiewZLsBjn7Z2O2fgayV1ihZ8AXOWC2Ar3si
        NHRTWelowMKtqVhsm4bt2iy4ag3IWLYCRXM/Rf6386F1SYCTbxaW26fh45XhmL9Ol0Jelq8+E5qeBScT
        04lZxOxXeP8v+GCMzCQsiYlveijlW/LfedgcK8MPpaMU8E8vbmCs/P+f0X++AEh/AqKkSSOGWHRQAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>